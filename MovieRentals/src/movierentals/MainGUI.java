package movierentals;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import static movierentals.ConnectionGUI.database;
import static movierentals.FurtherInfoGUI.jtaFurtherInfo;
import static movierentals.MovieInfoGUI.actorInfoButton;
import static movierentals.MovieInfoGUI.jbRent;
import static movierentals.MovieInfoGUI.jbReturn;
import static movierentals.MovieInfoGUI.jtaInfo;
import static movierentals.MovieInfoGUI.studioInfoButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author student
 */
public class MainGUI extends javax.swing.JPanel {

    private static Movie movie = new Movie();;

    /**
     * Creates the main GUI
     */
    public MainGUI(MovieRentalsDatabase db) {
        initComponents();
        ConnectionGUI.database = db;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenuBar6 = new javax.swing.JMenuBar();
        jMenu11 = new javax.swing.JMenu();
        jMenu12 = new javax.swing.JMenu();
        jMenuBar7 = new javax.swing.JMenuBar();
        jMenu13 = new javax.swing.JMenu();
        jMenu14 = new javax.swing.JMenu();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jpSearch = new javax.swing.JPanel();
        jlSearch = new javax.swing.JLabel();
        jtfSearch = new javax.swing.JTextField();
        jbGo = new javax.swing.JButton();
        jpCenter = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtMovies = new javax.swing.JTable();
        jMenuBar5 = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        jmiExport = new javax.swing.JMenuItem();
        jmiExit = new javax.swing.JMenuItem();
        jmEdit = new javax.swing.JMenu();
        addMovToDb = new javax.swing.JMenuItem();
        rmMovFromDb = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        jMenuItem1.setText("jMenuItem1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenu7.setText("File");
        jMenuBar4.add(jMenu7);

        jMenu8.setText("Edit");
        jMenuBar4.add(jMenu8);

        jMenu11.setText("File");
        jMenuBar6.add(jMenu11);

        jMenu12.setText("Edit");
        jMenuBar6.add(jMenu12);

        jMenu13.setText("File");
        jMenuBar7.add(jMenu13);

        jMenu14.setText("Edit");
        jMenuBar7.add(jMenu14);

        jInternalFrame1.setVisible(true);

        jlSearch.setText("Search:");

        jtfSearch.setToolTipText("Enter Movie Name Here");

        jbGo.setText("Go");
        jbGo.setToolTipText("");
        jbGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSearchLayout = new javax.swing.GroupLayout(jpSearch);
        jpSearch.setLayout(jpSearchLayout);
        jpSearchLayout.setHorizontalGroup(
            jpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSearchLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jlSearch)
                .addGap(18, 18, 18)
                .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbGo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpSearchLayout.setVerticalGroup(
            jpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSearchLayout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addGroup(jpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSearch)
                    .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbGo)))
        );

        jtMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Date Released", "Genre", "Age Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtMovies);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jpCenterLayout = new javax.swing.GroupLayout(jpCenter);
        jpCenter.setLayout(jpCenterLayout);
        jpCenterLayout.setHorizontalGroup(
            jpCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpCenterLayout.setVerticalGroup(
            jpCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCenterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jmFile.setText("File");

        jmiExport.setText("Export");
        jmiExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExportActionPerformed(evt);
            }
        });
        jmFile.add(jmiExport);

        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jmFile.add(jmiExit);

        jMenuBar5.add(jmFile);

        jmEdit.setText("Edit");

        addMovToDb.setText("Add movie to database");
        addMovToDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovToDbActionPerformed(evt);
            }
        });
        jmEdit.add(addMovToDb);

        rmMovFromDb.setText("Remove movie from databse");
        rmMovFromDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmMovFromDbActionPerformed(evt);
            }
        });
        jmEdit.add(rmMovFromDb);

        jMenuBar5.add(jmEdit);

        jInternalFrame1.setJMenuBar(jMenuBar5);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGoActionPerformed

        if (data != null) {
            data.clear();
        }
        String searchTerm = jtfSearch.getText().trim();
        
        MoviesOnLoan loanedMovies = new MoviesOnLoan();

        if (searchTerm.equals("")) {
            data = movie.fetchAll(database);
            DefaultTableModel model = (DefaultTableModel) jtMovies.getModel();
            model.setRowCount(0);

            for (int i = 0; i < data.size(); i++) {
                Object[] row = {data.get(i).get(1), data.get(i).get(2), data.get(i).get(3), data.get(i).get(4)};
                model.addRow(row);
            }

        } else {
            data = movie.fetchFromSearch(database, searchTerm);
            DefaultTableModel model = (DefaultTableModel) jtMovies.getModel();
            model.setRowCount(0);

            for (int i = 0; i < data.size(); i++) {
                Object[] row = {data.get(i).get(1), data.get(i).get(2), data.get(i).get(3), data.get(i).get(4)};
                model.addRow(row);
            }
        }

        jtMovies.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (event.getValueIsAdjusting() == false) {
                    int row = jtMovies.getSelectedRow();
                    if (row != -1) {
                        String movieName = data.get(jtMovies.getSelectedRow()).get(1);
                        String movieInfo = movie.getMovieInfo(database, movieName);
                        MovieInfoGUI.main();
                        MovieInfoGUI gui = new MovieInfoGUI();
                        gui.setVisible(true);
                        gui.setLocationRelativeTo(null);
                        jtaInfo.setText(movieInfo);

                        if (movie.isRented()) {
                            jbRent.setEnabled(false);
                        }

                        boolean hasRented = loanedMovies.hasRentedMovie(database, movieName, ConnectionGUI.getUser().getUserID());
                        System.out.println(hasRented);
                        if (!hasRented) {
                            jbReturn.setEnabled(false);
                        }

                        jbRent.addActionListener(new ActionListener() {
                            public void actionPerformed(ActionEvent ae) {
                                ConnectionGUI.getUser().getUserID();
                                int choice = JOptionPane.showConfirmDialog(null, "Would you like to rent " + movieName + " for a week?\n Answering NO will rent it for a day.");
                                if (choice == JOptionPane.YES_OPTION) {
                                    loanedMovies.rentMovie(database, movieName, true, ConnectionGUI.getUser().getUserID());
                                } else if (choice == JOptionPane.NO_OPTION) {
                                    loanedMovies.rentMovie(database, movieName, false, ConnectionGUI.getUser().getUserID());
                                }
                                jbReturn.setEnabled(true);
                                jbRent.setEnabled(false);
                            }
                        });

                        jbReturn.addActionListener(new ActionListener() {
                            public void actionPerformed(ActionEvent ae) {
                                loanedMovies.returnMovie(database, movieName, ConnectionGUI.getUser().getUserID());
                                jbRent.setEnabled(true);
                            }
                        });

                        actorInfoButton.addActionListener(new ActionListener() {
                            public void actionPerformed(ActionEvent ae) {
                                Actor actor = new Actor();
                                int movie_id = Integer.parseInt(data.get(row).get(0));
                                String info = actor.getActorInfo(database, movie_id);
                                //System.out.println(info);
                                FurtherInfoGUI infoGui = new FurtherInfoGUI();
                                infoGui.setVisible(true);
                                infoGui.setLocationRelativeTo(null);
                                jtaFurtherInfo.setText(info);
                            }
                        });

                        studioInfoButton.addActionListener(new ActionListener() {
                            public void actionPerformed(ActionEvent ae) {
                                Studio studio = new Studio();
                                int movie_id = Integer.parseInt(data.get(row).get(0));
                                String info = studio.getStudioInfo(database, movie_id);
                                FurtherInfoGUI infoGui = new FurtherInfoGUI();
                                infoGui.setVisible(true);
                                infoGui.setLocationRelativeTo(null);
                                jtaFurtherInfo.setText(info);
                            }
                        });

                        jtMovies.clearSelection();
                    }
                }
            }
        });
    }//GEN-LAST:event_jbGoActionPerformed


    private void jmiExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExportActionPerformed
        UtilitiesClass utils = new UtilitiesClass();
        utils.exportMoviesToFile(data);
    }//GEN-LAST:event_jmiExportActionPerformed

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jmiExitActionPerformed

    private void rmMovFromDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmMovFromDbActionPerformed
        DeleteMovieGUI delMovGUI = new DeleteMovieGUI();
        delMovGUI.main();
        
    }//GEN-LAST:event_rmMovFromDbActionPerformed

    private void addMovToDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovToDbActionPerformed
        AddMovieGUI addMovGUI = new AddMovieGUI();
        addMovGUI.main();
    }//GEN-LAST:event_addMovToDbActionPerformed

    private ArrayList<ArrayList<String>> data;

    public static Movie returnMovieObj() {
        return movie;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addMovToDb;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuBar jMenuBar6;
    private javax.swing.JMenuBar jMenuBar7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbGo;
    private javax.swing.JLabel jlSearch;
    private javax.swing.JMenu jmEdit;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiExport;
    private javax.swing.JPanel jpCenter;
    private javax.swing.JPanel jpSearch;
    private javax.swing.JTable jtMovies;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JMenuItem rmMovFromDb;
    // End of variables declaration//GEN-END:variables
}
